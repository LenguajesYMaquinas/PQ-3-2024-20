// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Coder.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Coder {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object Alph=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=18;
      Alph=$fix($opIntvlY('0','9'));
      $line=19;
      Object coder=$fix(Coder.createTransducer(Alph));
      $line=20;
      System.out.println($message(new Object[]{"Input strings of  (0..9)"}));
      $line=22;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"main",$line);
    }
  }
  public static ITransducer createTransducer(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=29;
      Object Q=$fix($opUnionY(GCollections.asSet("I"),$opIntvlY(0,9)));
      $line=30;
      System.out.println($message(new Object[]{Q}));
      $line=32;
      Object \u03A3=$fix($opIntvlY('0','9'));
      $line=33;
      Object O=$fix($opUnionY($opIntvlY('0','9'),GCollections.asSet('+','-')));
      $line=34;
      Object q_0=$fix("I");
      $line=35;
      Object F=$fix(Q);
      $line=36;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(Coder.class,"\u03B4"),new GMethod(Coder.class,"g"),new GMethod(Coder.class,"h")});
      if (true) break $try;
      $line=37;
      $rethrow(new RuntimeException("The function \"createTransducer(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=41;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=45;
      $result=$opSubtrY(\u03C3,'0');
      if (true) break $try;
      $line=46;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=49;
      Object d=$fix($opSubtrY(\u03C3,'0'));
      $line=50;
      if ($opEqualY(q,"I")) {
        $line=50;
        $result=d;
        if (true) break $try;
      }
      else {
        $line=51;
        if ($opEqualY(d,q)) {
          $line=51;
          $result="0";
          if (true) break $try;
        }
        else {
          $line=52;
          if ($opGreatY(d,q)) {
            $line=52;
            $result=$opAdditY("+",$opSubtrY(d,q));
            if (true) break $try;
          }
          else {
            $line=53;
            $result=$opAdditY("-",$opSubtrY(q,d));
            if (true) break $try;
          }
        }
      }
      $line=55;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Coder.class,"h",$line);
    }
    return $result;
  }
}
